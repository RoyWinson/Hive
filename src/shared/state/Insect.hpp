// Generated by dia2code
#ifndef STATE__INSECT__H
#define STATE__INSECT__H

#include <string>
#include <vector>

namespace state {
  class Insect;
  class Case;
}

#include "Case.hpp"

namespace state {

  /// class Insect - 
  class Insect {
    // Attributes
  protected:
    std::string Name;
    std::string Color;
    std::vector<int> Coord;
    int Level;
    bool IsPlaced;
    // Operations
  public:
    void Select_Insect ();
    void Update_Coord (std::vector<int> coord);
    std::vector<int> Get_Position ();
    std::vector<std::vector<int>> Possible_Placement_Insect (std::vector<Insect> list_insect_placed, std::vector<Case> list_case);
    virtual std::vector<std::vector<int>> Possible_Deplacement_Insect (std::vector<Insect> list_insect_placed, std::vector<Case> list_case);
    std::string GetName ();
    std::string GetColor ();
    int GetLevel ();
    void SetPosition (std::vector<int> coord);
    void SetLevel (int level);
    Insect (std::string name, std::string color, std::vector<int> coord, int level);
    bool GetIsPlaced ();
    void SetIsPlaced (bool state);
    int Get_i ();
    int Get_j ();
    // Setters and Getters
    const std::string& getName() const;
    void setName(const std::string& Name);
    const std::string& getColor() const;
    void setColor(const std::string& Color);
    const std::vector<int>& getCoord() const;
    void setCoord(const std::vector<int>& Coord);
    int getLevel() const;
    void setLevel(int Level);
    bool getIsPlaced() const;
    void setIsPlaced(bool IsPlaced);
  };

};

#endif
